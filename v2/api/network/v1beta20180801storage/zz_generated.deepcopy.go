//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta20180801storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsConfig) DeepCopyInto(out *DnsConfig) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RelativeName != nil {
		in, out := &in.RelativeName, &out.RelativeName
		*out = new(string)
		**out = **in
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsConfig.
func (in *DnsConfig) DeepCopy() *DnsConfig {
	if in == nil {
		return nil
	}
	out := new(DnsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsConfig_STATUS) DeepCopyInto(out *DnsConfig_STATUS) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RelativeName != nil {
		in, out := &in.RelativeName, &out.RelativeName
		*out = new(string)
		**out = **in
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsConfig_STATUS.
func (in *DnsConfig_STATUS) DeepCopy() *DnsConfig_STATUS {
	if in == nil {
		return nil
	}
	out := new(DnsConfig_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(genruntime.ResourceReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint_STATUS) DeepCopyInto(out *Endpoint_STATUS) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint_STATUS.
func (in *Endpoint_STATUS) DeepCopy() *Endpoint_STATUS {
	if in == nil {
		return nil
	}
	out := new(Endpoint_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig) DeepCopyInto(out *MonitorConfig) {
	*out = *in
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = make([]MonitorConfig_CustomHeaders, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpectedStatusCodeRanges != nil {
		in, out := &in.ExpectedStatusCodeRanges, &out.ExpectedStatusCodeRanges
		*out = make([]MonitorConfig_ExpectedStatusCodeRanges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.ProfileMonitorStatus != nil {
		in, out := &in.ProfileMonitorStatus, &out.ProfileMonitorStatus
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int)
		**out = **in
	}
	if in.ToleratedNumberOfFailures != nil {
		in, out := &in.ToleratedNumberOfFailures, &out.ToleratedNumberOfFailures
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig.
func (in *MonitorConfig) DeepCopy() *MonitorConfig {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig_CustomHeaders) DeepCopyInto(out *MonitorConfig_CustomHeaders) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig_CustomHeaders.
func (in *MonitorConfig_CustomHeaders) DeepCopy() *MonitorConfig_CustomHeaders {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig_CustomHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig_CustomHeaders_STATUS) DeepCopyInto(out *MonitorConfig_CustomHeaders_STATUS) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig_CustomHeaders_STATUS.
func (in *MonitorConfig_CustomHeaders_STATUS) DeepCopy() *MonitorConfig_CustomHeaders_STATUS {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig_CustomHeaders_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig_ExpectedStatusCodeRanges) DeepCopyInto(out *MonitorConfig_ExpectedStatusCodeRanges) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig_ExpectedStatusCodeRanges.
func (in *MonitorConfig_ExpectedStatusCodeRanges) DeepCopy() *MonitorConfig_ExpectedStatusCodeRanges {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig_ExpectedStatusCodeRanges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig_ExpectedStatusCodeRanges_STATUS) DeepCopyInto(out *MonitorConfig_ExpectedStatusCodeRanges_STATUS) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig_ExpectedStatusCodeRanges_STATUS.
func (in *MonitorConfig_ExpectedStatusCodeRanges_STATUS) DeepCopy() *MonitorConfig_ExpectedStatusCodeRanges_STATUS {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig_ExpectedStatusCodeRanges_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorConfig_STATUS) DeepCopyInto(out *MonitorConfig_STATUS) {
	*out = *in
	if in.CustomHeaders != nil {
		in, out := &in.CustomHeaders, &out.CustomHeaders
		*out = make([]MonitorConfig_CustomHeaders_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpectedStatusCodeRanges != nil {
		in, out := &in.ExpectedStatusCodeRanges, &out.ExpectedStatusCodeRanges
		*out = make([]MonitorConfig_ExpectedStatusCodeRanges_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	if in.ProfileMonitorStatus != nil {
		in, out := &in.ProfileMonitorStatus, &out.ProfileMonitorStatus
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInSeconds != nil {
		in, out := &in.TimeoutInSeconds, &out.TimeoutInSeconds
		*out = new(int)
		**out = **in
	}
	if in.ToleratedNumberOfFailures != nil {
		in, out := &in.ToleratedNumberOfFailures, &out.ToleratedNumberOfFailures
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorConfig_STATUS.
func (in *MonitorConfig_STATUS) DeepCopy() *MonitorConfig_STATUS {
	if in == nil {
		return nil
	}
	out := new(MonitorConfig_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trafficmanagerprofile) DeepCopyInto(out *Trafficmanagerprofile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trafficmanagerprofile.
func (in *Trafficmanagerprofile) DeepCopy() *Trafficmanagerprofile {
	if in == nil {
		return nil
	}
	out := new(Trafficmanagerprofile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Trafficmanagerprofile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrafficmanagerprofileList) DeepCopyInto(out *TrafficmanagerprofileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trafficmanagerprofile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficmanagerprofileList.
func (in *TrafficmanagerprofileList) DeepCopy() *TrafficmanagerprofileList {
	if in == nil {
		return nil
	}
	out := new(TrafficmanagerprofileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrafficmanagerprofileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trafficmanagerprofile_STATUS) DeepCopyInto(out *Trafficmanagerprofile_STATUS) {
	*out = *in
	if in.AllowedEndpointRecordTypes != nil {
		in, out := &in.AllowedEndpointRecordTypes, &out.AllowedEndpointRecordTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]conditions.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DnsConfig != nil {
		in, out := &in.DnsConfig, &out.DnsConfig
		*out = new(DnsConfig_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]Endpoint_STATUS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxReturn != nil {
		in, out := &in.MaxReturn, &out.MaxReturn
		*out = new(int)
		**out = **in
	}
	if in.MonitorConfig != nil {
		in, out := &in.MonitorConfig, &out.MonitorConfig
		*out = new(MonitorConfig_STATUS)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProfileStatus != nil {
		in, out := &in.ProfileStatus, &out.ProfileStatus
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrafficRoutingMethod != nil {
		in, out := &in.TrafficRoutingMethod, &out.TrafficRoutingMethod
		*out = new(string)
		**out = **in
	}
	if in.TrafficViewEnrollmentStatus != nil {
		in, out := &in.TrafficViewEnrollmentStatus, &out.TrafficViewEnrollmentStatus
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trafficmanagerprofile_STATUS.
func (in *Trafficmanagerprofile_STATUS) DeepCopy() *Trafficmanagerprofile_STATUS {
	if in == nil {
		return nil
	}
	out := new(Trafficmanagerprofile_STATUS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trafficmanagerprofile_Spec) DeepCopyInto(out *Trafficmanagerprofile_Spec) {
	*out = *in
	if in.AllowedEndpointRecordTypes != nil {
		in, out := &in.AllowedEndpointRecordTypes, &out.AllowedEndpointRecordTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DnsConfig != nil {
		in, out := &in.DnsConfig, &out.DnsConfig
		*out = new(DnsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxReturn != nil {
		in, out := &in.MaxReturn, &out.MaxReturn
		*out = new(int)
		**out = **in
	}
	if in.MonitorConfig != nil {
		in, out := &in.MonitorConfig, &out.MonitorConfig
		*out = new(MonitorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProfileStatus != nil {
		in, out := &in.ProfileStatus, &out.ProfileStatus
		*out = new(string)
		**out = **in
	}
	if in.PropertyBag != nil {
		in, out := &in.PropertyBag, &out.PropertyBag
		*out = make(genruntime.PropertyBag, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrafficRoutingMethod != nil {
		in, out := &in.TrafficRoutingMethod, &out.TrafficRoutingMethod
		*out = new(string)
		**out = **in
	}
	if in.TrafficViewEnrollmentStatus != nil {
		in, out := &in.TrafficViewEnrollmentStatus, &out.TrafficViewEnrollmentStatus
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trafficmanagerprofile_Spec.
func (in *Trafficmanagerprofile_Spec) DeepCopy() *Trafficmanagerprofile_Spec {
	if in == nil {
		return nil
	}
	out := new(Trafficmanagerprofile_Spec)
	in.DeepCopyInto(out)
	return out
}
