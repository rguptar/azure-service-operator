// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package v1beta20180801storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=network.azure.com,resources=trafficmanagerprofiles,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=network.azure.com,resources={trafficmanagerprofiles/status,trafficmanagerprofiles/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1beta20180801.Trafficmanagerprofile
// Generator information:
// - Generated from: /trafficmanager/resource-manager/Microsoft.Network/stable/2018-08-01/trafficmanager.json
// - ARM URI:
type Trafficmanagerprofile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Trafficmanagerprofile_Spec   `json:"spec,omitempty"`
	Status            Trafficmanagerprofile_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &Trafficmanagerprofile{}

// GetConditions returns the conditions of the resource
func (trafficmanagerprofile *Trafficmanagerprofile) GetConditions() conditions.Conditions {
	return trafficmanagerprofile.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (trafficmanagerprofile *Trafficmanagerprofile) SetConditions(conditions conditions.Conditions) {
	trafficmanagerprofile.Status.Conditions = conditions
}

var _ genruntime.KubernetesResource = &Trafficmanagerprofile{}

// AzureName returns the Azure name of the resource
func (trafficmanagerprofile *Trafficmanagerprofile) AzureName() string {
	return trafficmanagerprofile.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2018-08-01"
func (trafficmanagerprofile Trafficmanagerprofile) GetAPIVersion() string {
	return string(APIVersion_Value)
}

// GetResourceScope returns the scope of the resource
func (trafficmanagerprofile *Trafficmanagerprofile) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeTenant
}

// GetSpec returns the specification of this resource
func (trafficmanagerprofile *Trafficmanagerprofile) GetSpec() genruntime.ConvertibleSpec {
	return &trafficmanagerprofile.Spec
}

// GetStatus returns the status of this resource
func (trafficmanagerprofile *Trafficmanagerprofile) GetStatus() genruntime.ConvertibleStatus {
	return &trafficmanagerprofile.Status
}

// GetType returns the ARM Type of the resource. This is always ""
func (trafficmanagerprofile *Trafficmanagerprofile) GetType() string {
	return ""
}

// NewEmptyStatus returns a new empty (blank) status
func (trafficmanagerprofile *Trafficmanagerprofile) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &Trafficmanagerprofile_STATUS{}
}

// Owner returns the ResourceReference of the owner, or nil if there is no owner
func (trafficmanagerprofile *Trafficmanagerprofile) Owner() *genruntime.ResourceReference {
	return nil
}

// SetStatus sets the status of this resource
func (trafficmanagerprofile *Trafficmanagerprofile) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*Trafficmanagerprofile_STATUS); ok {
		trafficmanagerprofile.Status = *st
		return nil
	}

	// Convert status to required version
	var st Trafficmanagerprofile_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	trafficmanagerprofile.Status = st
	return nil
}

// Hub marks that this Trafficmanagerprofile is the hub type for conversion
func (trafficmanagerprofile *Trafficmanagerprofile) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (trafficmanagerprofile *Trafficmanagerprofile) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: trafficmanagerprofile.Spec.OriginalVersion,
		Kind:    "Trafficmanagerprofile",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1beta20180801.Trafficmanagerprofile
// Generator information:
// - Generated from: /trafficmanager/resource-manager/Microsoft.Network/stable/2018-08-01/trafficmanager.json
// - ARM URI:
type TrafficmanagerprofileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Trafficmanagerprofile `json:"items"`
}

// Storage version of v1beta20180801.APIVersion
// +kubebuilder:validation:Enum={"2018-08-01"}
type APIVersion string

const APIVersion_Value = APIVersion("2018-08-01")

// Storage version of v1beta20180801.Trafficmanagerprofile_Spec
type Trafficmanagerprofile_Spec struct {
	AllowedEndpointRecordTypes []string `json:"allowedEndpointRecordTypes,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName                   string                 `json:"azureName,omitempty"`
	DnsConfig                   *DnsConfig             `json:"dnsConfig,omitempty"`
	Endpoints                   []Endpoint             `json:"endpoints,omitempty"`
	Location                    *string                `json:"location,omitempty"`
	MaxReturn                   *int                   `json:"maxReturn,omitempty"`
	MonitorConfig               *MonitorConfig         `json:"monitorConfig,omitempty"`
	OriginalVersion             string                 `json:"originalVersion,omitempty"`
	ProfileStatus               *string                `json:"profileStatus,omitempty"`
	PropertyBag                 genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tags                        map[string]string      `json:"tags,omitempty"`
	TrafficRoutingMethod        *string                `json:"trafficRoutingMethod,omitempty"`
	TrafficViewEnrollmentStatus *string                `json:"trafficViewEnrollmentStatus,omitempty"`
	Type                        *string                `json:"type,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Trafficmanagerprofile_Spec{}

// ConvertSpecFrom populates our Trafficmanagerprofile_Spec from the provided source
func (trafficmanagerprofile *Trafficmanagerprofile_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == trafficmanagerprofile {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(trafficmanagerprofile)
}

// ConvertSpecTo populates the provided destination from our Trafficmanagerprofile_Spec
func (trafficmanagerprofile *Trafficmanagerprofile_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == trafficmanagerprofile {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(trafficmanagerprofile)
}

// Storage version of v1beta20180801.Trafficmanagerprofile_STATUS
type Trafficmanagerprofile_STATUS struct {
	AllowedEndpointRecordTypes  []string               `json:"allowedEndpointRecordTypes,omitempty"`
	Conditions                  []conditions.Condition `json:"conditions,omitempty"`
	DnsConfig                   *DnsConfig_STATUS      `json:"dnsConfig,omitempty"`
	Endpoints                   []Endpoint_STATUS      `json:"endpoints,omitempty"`
	Id                          *string                `json:"id,omitempty"`
	Location                    *string                `json:"location,omitempty"`
	MaxReturn                   *int                   `json:"maxReturn,omitempty"`
	MonitorConfig               *MonitorConfig_STATUS  `json:"monitorConfig,omitempty"`
	Name                        *string                `json:"name,omitempty"`
	ProfileStatus               *string                `json:"profileStatus,omitempty"`
	PropertyBag                 genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Tags                        map[string]string      `json:"tags,omitempty"`
	TrafficRoutingMethod        *string                `json:"trafficRoutingMethod,omitempty"`
	TrafficViewEnrollmentStatus *string                `json:"trafficViewEnrollmentStatus,omitempty"`
	Type                        *string                `json:"type,omitempty"`
}

var _ genruntime.ConvertibleStatus = &Trafficmanagerprofile_STATUS{}

// ConvertStatusFrom populates our Trafficmanagerprofile_STATUS from the provided source
func (trafficmanagerprofile *Trafficmanagerprofile_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == trafficmanagerprofile {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(trafficmanagerprofile)
}

// ConvertStatusTo populates the provided destination from our Trafficmanagerprofile_STATUS
func (trafficmanagerprofile *Trafficmanagerprofile_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == trafficmanagerprofile {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(trafficmanagerprofile)
}

// Storage version of v1beta20180801.DnsConfig
// Class containing DNS settings in a Traffic Manager profile.
type DnsConfig struct {
	PropertyBag  genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RelativeName *string                `json:"relativeName,omitempty"`
	Ttl          *int                   `json:"ttl,omitempty"`
}

// Storage version of v1beta20180801.DnsConfig_STATUS
// Class containing DNS settings in a Traffic Manager profile.
type DnsConfig_STATUS struct {
	Fqdn         *string                `json:"fqdn,omitempty"`
	PropertyBag  genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	RelativeName *string                `json:"relativeName,omitempty"`
	Ttl          *int                   `json:"ttl,omitempty"`
}

// Storage version of v1beta20180801.Endpoint
// Class representing a Traffic Manager endpoint.
type Endpoint struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	// Reference: Fully qualified resource Id for the resource. Ex -
	// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Reference *genruntime.ResourceReference `armReference:"Id" json:"reference,omitempty"`
}

// Storage version of v1beta20180801.Endpoint_STATUS
// Class representing a Traffic Manager endpoint.
type Endpoint_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig
// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfig struct {
	CustomHeaders             []MonitorConfig_CustomHeaders            `json:"customHeaders,omitempty"`
	ExpectedStatusCodeRanges  []MonitorConfig_ExpectedStatusCodeRanges `json:"expectedStatusCodeRanges,omitempty"`
	IntervalInSeconds         *int                                     `json:"intervalInSeconds,omitempty"`
	Path                      *string                                  `json:"path,omitempty"`
	Port                      *int                                     `json:"port,omitempty"`
	ProfileMonitorStatus      *string                                  `json:"profileMonitorStatus,omitempty"`
	PropertyBag               genruntime.PropertyBag                   `json:"$propertyBag,omitempty"`
	Protocol                  *string                                  `json:"protocol,omitempty"`
	TimeoutInSeconds          *int                                     `json:"timeoutInSeconds,omitempty"`
	ToleratedNumberOfFailures *int                                     `json:"toleratedNumberOfFailures,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig_STATUS
// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfig_STATUS struct {
	CustomHeaders             []MonitorConfig_CustomHeaders_STATUS            `json:"customHeaders,omitempty"`
	ExpectedStatusCodeRanges  []MonitorConfig_ExpectedStatusCodeRanges_STATUS `json:"expectedStatusCodeRanges,omitempty"`
	IntervalInSeconds         *int                                            `json:"intervalInSeconds,omitempty"`
	Path                      *string                                         `json:"path,omitempty"`
	Port                      *int                                            `json:"port,omitempty"`
	ProfileMonitorStatus      *string                                         `json:"profileMonitorStatus,omitempty"`
	PropertyBag               genruntime.PropertyBag                          `json:"$propertyBag,omitempty"`
	Protocol                  *string                                         `json:"protocol,omitempty"`
	TimeoutInSeconds          *int                                            `json:"timeoutInSeconds,omitempty"`
	ToleratedNumberOfFailures *int                                            `json:"toleratedNumberOfFailures,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig_CustomHeaders
type MonitorConfig_CustomHeaders struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig_CustomHeaders_STATUS
type MonitorConfig_CustomHeaders_STATUS struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig_ExpectedStatusCodeRanges
type MonitorConfig_ExpectedStatusCodeRanges struct {
	Max         *int                   `json:"max,omitempty"`
	Min         *int                   `json:"min,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1beta20180801.MonitorConfig_ExpectedStatusCodeRanges_STATUS
type MonitorConfig_ExpectedStatusCodeRanges_STATUS struct {
	Max         *int                   `json:"max,omitempty"`
	Min         *int                   `json:"min,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Trafficmanagerprofile{}, &TrafficmanagerprofileList{})
}
